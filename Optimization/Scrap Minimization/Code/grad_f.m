function grad = grad_f(x,lambda)
    global optimParams;

    R = optimParams.radius;  
    
    %Constraint 1: 1-6 --> Constraint due to collision between circles
    %             7-22 --> Constraint due to exceeding the rectangular box
    %             side lenghts
    %             7-14 --> Relation between side length + position + radius
    %            14-22 --> Relation between position + radius
    
    %Constraint Array
    c = [R(1)+R(2)-sqrt((x(3)-x(5))^2 + (x(4)-x(6))^2); ...
         R(1)+R(3)-sqrt((x(3)-x(7))^2 + (x(4)-x(8))^2);...
         R(1)+R(4)-sqrt((x(3)-x(9))^2 + (x(4)-x(10))^2);...
         R(2)+R(3)-sqrt((x(5)-x(7))^2 + (x(6)-x(8))^2);...
    	 R(2)+R(4)-sqrt((x(5)-x(9))^2 + (x(6)-x(10))^2);...
    	 R(3)+R(4)-sqrt((x(7)-x(9))^2 + (x(8)-x(10))^2);...
         x(3)+R(1)-x(1); x(5)+R(2)-x(1); x(7)+R(3)-x(1);...
         x(9)+R(4)-x(1); x(4)+R(1)-x(2); x(6)+R(2)-x(2);...
         x(8)+R(3)-x(2); x(10)+R(4)-x(2);(R(1)-x(3)); ...
         (R(2)-x(5)); (R(3)-x(7)); (R(4)-x(9)); (R(1)-x(4)); ...
         (R(2)-x(6)); (R(3)-x(8)); (R(4)-x(10))];
    
    %Penalty Flag List
    pF = c > 0;
    
    %Function definition and gradient calculation
    
    x1 = x(1);x2 = x(2);x3 = x(3);x4 = x(4);x5 = x(5);x6 = x(6);
    x7 = x(7);x8 = x(8);x9 = x(9);x10 = x(10);
    
    f1 = pF(1);f2 = pF(2);f3 = pF(3);f4 = pF(4);f5 = pF(5);f6 = pF(6);
    f7 = pF(7);f8 = pF(8);f9 = pF(9);f10 = pF(10);
    f11 = pF(11);f12 = pF(12);f13 = pF(13);f14 = pF(14);f15 = pF(15);f16 = pF(16);
    f17 = pF(17);f18 = pF(18);f19 = pF(19);f20 = pF(20);
    f21 = pF(21);f22 = pF(22);
    
    R1 = R(1);R2 = R(2);R3 = R(3);R4 = R(4);
    
    grad = [ x2 - lambda*(f7*(2*R1 - 2*x1 + 2*x3) + f8*(2*R2 - 2*x1 + 2*x5) + f9*(2*R3 - 2*x1 + 2*x7) + f10*(2*R4 - 2*x1 + 2*x9)), x1 - lambda*(f11*(2*R1 - 2*x2 + 2*x4) + f12*(2*R2 - 2*x2 + 2*x6) + f13*(2*R3 - 2*x2 + 2*x8) + f14*(2*R4 - 2*x2 + 2*x10)), -lambda*(f15*(2*R1 - 2*x3) - f7*(2*R1 - 2*x1 + 2*x3) + (f1*(2*x3 - 2*x5)*(R1 + R2 - ((x3 - x5)^2 + (x4 - x6)^2)^(1/2)))/((x3 - x5)^2 + (x4 - x6)^2)^(1/2) + (f2*(2*x3 - 2*x7)*(R1 + R3 - ((x3 - x7)^2 + (x4 - x8)^2)^(1/2)))/((x3 - x7)^2 + (x4 - x8)^2)^(1/2) + (f3*(2*x3 - 2*x9)*(R1 + R4 - ((x3 - x9)^2 + (x4 - x10)^2)^(1/2)))/((x3 - x9)^2 + (x4 - x10)^2)^(1/2)), -lambda*(f19*(2*R1 - 2*x4) - f11*(2*R1 - 2*x2 + 2*x4) + (f1*(2*x4 - 2*x6)*(R1 + R2 - ((x3 - x5)^2 + (x4 - x6)^2)^(1/2)))/((x3 - x5)^2 + (x4 - x6)^2)^(1/2) + (f2*(2*x4 - 2*x8)*(R1 + R3 - ((x3 - x7)^2 + (x4 - x8)^2)^(1/2)))/((x3 - x7)^2 + (x4 - x8)^2)^(1/2) + (f3*(2*x4 - 2*x10)*(R1 + R4 - ((x3 - x9)^2 + (x4 - x10)^2)^(1/2)))/((x3 - x9)^2 + (x4 - x10)^2)^(1/2) + (f6*(2*x4 - 2*x10)*(R3 + R4 - ((x4 - x10)^2 + (x7 - x9)^2)^(1/2)))/((x4 - x10)^2 + (x7 - x9)^2)^(1/2)), -lambda*(f16*(2*R2 - 2*x5) - f8*(2*R2 - 2*x1 + 2*x5) - (f1*(2*x3 - 2*x5)*(R1 + R2 - ((x3 - x5)^2 + (x4 - x6)^2)^(1/2)))/((x3 - x5)^2 + (x4 - x6)^2)^(1/2) + (f4*(2*x5 - 2*x7)*(R2 + R3 - ((x5 - x7)^2 + (x6 - x8)^2)^(1/2)))/((x5 - x7)^2 + (x6 - x8)^2)^(1/2) + (f5*(2*x5 - 2*x9)*(R2 + R4 - ((x5 - x9)^2 + (x6 - x10)^2)^(1/2)))/((x5 - x9)^2 + (x6 - x10)^2)^(1/2)), -lambda*(f20*(2*R2 - 2*x6) - f12*(2*R2 - 2*x2 + 2*x6) - (f1*(2*x4 - 2*x6)*(R1 + R2 - ((x3 - x5)^2 + (x4 - x6)^2)^(1/2)))/((x3 - x5)^2 + (x4 - x6)^2)^(1/2) + (f4*(2*x6 - 2*x8)*(R2 + R3 - ((x5 - x7)^2 + (x6 - x8)^2)^(1/2)))/((x5 - x7)^2 + (x6 - x8)^2)^(1/2) + (f5*(2*x6 - 2*x10)*(R2 + R4 - ((x5 - x9)^2 + (x6 - x10)^2)^(1/2)))/((x5 - x9)^2 + (x6 - x10)^2)^(1/2)), lambda*(f9*(2*R3 - 2*x1 + 2*x7) - f17*(2*R3 - 2*x7) + (f2*(2*x3 - 2*x7)*(R1 + R3 - ((x3 - x7)^2 + (x4 - x8)^2)^(1/2)))/((x3 - x7)^2 + (x4 - x8)^2)^(1/2) + (f4*(2*x5 - 2*x7)*(R2 + R3 - ((x5 - x7)^2 + (x6 - x8)^2)^(1/2)))/((x5 - x7)^2 + (x6 - x8)^2)^(1/2) - (f6*(2*x7 - 2*x9)*(R3 + R4 - ((x4 - x10)^2 + (x7 - x9)^2)^(1/2)))/((x4 - x10)^2 + (x7 - x9)^2)^(1/2)), lambda*(f13*(2*R3 - 2*x2 + 2*x8) - f21*(2*R3 - 2*x8) + (f2*(2*x4 - 2*x8)*(R1 + R3 - ((x3 - x7)^2 + (x4 - x8)^2)^(1/2)))/((x3 - x7)^2 + (x4 - x8)^2)^(1/2) + (f4*(2*x6 - 2*x8)*(R2 + R3 - ((x5 - x7)^2 + (x6 - x8)^2)^(1/2)))/((x5 - x7)^2 + (x6 - x8)^2)^(1/2)), lambda*(f10*(2*R4 - 2*x1 + 2*x9) - f18*(2*R4 - 2*x9) + (f3*(2*x3 - 2*x9)*(R1 + R4 - ((x3 - x9)^2 + (x4 - x10)^2)^(1/2)))/((x3 - x9)^2 + (x4 - x10)^2)^(1/2) + (f5*(2*x5 - 2*x9)*(R2 + R4 - ((x5 - x9)^2 + (x6 - x10)^2)^(1/2)))/((x5 - x9)^2 + (x6 - x10)^2)^(1/2) + (f6*(2*x7 - 2*x9)*(R3 + R4 - ((x4 - x10)^2 + (x7 - x9)^2)^(1/2)))/((x4 - x10)^2 + (x7 - x9)^2)^(1/2)), lambda*(f14*(2*R4 - 2*x2 + 2*x10) - f22*(2*R4 - 2*x10) + (f3*(2*x4 - 2*x10)*(R1 + R4 - ((x3 - x9)^2 + (x4 - x10)^2)^(1/2)))/((x3 - x9)^2 + (x4 - x10)^2)^(1/2) + (f5*(2*x6 - 2*x10)*(R2 + R4 - ((x5 - x9)^2 + (x6 - x10)^2)^(1/2)))/((x5 - x9)^2 + (x6 - x10)^2)^(1/2) + (f6*(2*x4 - 2*x10)*(R3 + R4 - ((x4 - x10)^2 + (x7 - x9)^2)^(1/2)))/((x4 - x10)^2 + (x7 - x9)^2)^(1/2))];


end
